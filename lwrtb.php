<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('lwrtb')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_lwrtb.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('lwrtb.so')) return;
    } else {
      if (!dl('lwrtb.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class lwrtb {
	const WIN = 0;

	const LOSS = LOSS;

	const TOOLATE = TOOLATE;

	const INVALID = INVALID;

	const LOSTBID = LOSTBID;

	const DROPPEDBID = DROPPEDBID;

	const NOBUDGET = NOBUDGET;

	const BUG = BUG;

	static function BidStatusToString($status) {
		return BidStatusToString($status);
	}
}

/* PHP Proxy Classes */
class DeliveryEvent {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'DeliveryEvent_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('DeliveryEvent_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'DeliveryEvent_'.$var.'_get';
		if (function_exists($func)) {
			$r = call_user_func($func,$this->_cPtr);
			if (!is_resource($r)) return $r;
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			return new $c($r);
		}
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_lwrtb__DeliveryEvent') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_DeliveryEvent();
	}
}

class DeliveryCb {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_lwrtb__DeliveryCb') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'DeliveryCb') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_DeliveryCb($_this);
	}

	function call($arg0,$arg1) {
		print_r("DELIVERY");
		DeliveryCb_call($this->_cPtr,$arg0,$arg1);
	}
}

class BidRequestEvent {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'BidRequestEvent_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('BidRequestEvent_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'BidRequestEvent_'.$var.'_get';
		if (function_exists($func)) {
			$r = call_user_func($func,$this->_cPtr);
			if (!is_resource($r)) return $r;
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			return new $c($r);
		}
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_lwrtb__BidRequestEvent') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_BidRequestEvent();
	}
}

class BidRequestCb {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_lwrtb__BidRequestCb') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'BidRequestCb') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_BidRequestCb($_this);
	}

	function call($arg0,$arg1) {
		print_r("REQUEST");
		BidRequestCb_call($this->_cPtr,$arg0,$arg1);
	}
}

class BidResultEvent {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'BidResultEvent_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('BidResultEvent_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'BidResultEvent_'.$var.'_get';
		if (function_exists($func)) {
			$r = call_user_func($func,$this->_cPtr);
			if (!is_resource($r)) return $r;
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			return new $c($r);
		}
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_lwrtb__BidResultEvent') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_BidResultEvent();
	}
}

class BidResultCb {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_lwrtb__BidResultCb') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'BidResultCb') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_BidResultCb($_this);
	}

	function call($arg0,$arg1) {
		print_r("RESULT");
		BidResultCb_call($this->_cPtr,$arg0,$arg1);
	}
}

class ErrorEvent {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'ErrorEvent_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('ErrorEvent_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'ErrorEvent_'.$var.'_get';
		if (function_exists($func)) {
			$r = call_user_func($func,$this->_cPtr);
			if (!is_resource($r)) return $r;
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			return new $c($r);
		}
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_lwrtb__ErrorEvent') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ErrorEvent();
	}
}

class ErrorCb {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_lwrtb__ErrorCb') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'ErrorCb') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_ErrorCb($_this);
	}

	function call($arg0,$arg1) {
		print_r("ERROR");
		ErrorCb_call($this->_cPtr,$arg0,$arg1);
	}
}

class Bidder {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'Bidder_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_lwrtb_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('Bidder_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'Bidder_'.$var.'_get';
		if (function_exists($func)) {
			$r = call_user_func($func,$this->_cPtr);
			if (!is_resource($r)) return $r;
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			return new $c($r);
		}
		if ($var === 'thisown') return swig_lwrtb_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($name,$service_proxy_config=null) {
		if (is_resource($name) && get_resource_type($name) === '_p_lwrtb__Bidder') {
			$this->_cPtr=$name;
			return;
		}
		switch (func_num_args()) {
		case 1: $this->_cPtr=new_Bidder($name); break;
		default: $this->_cPtr=new_Bidder($name,$service_proxy_config);
		}
	}

	function init() {
		var_dump("---------------INIT-----------------\n");
		Bidder_init($this->_cPtr);
	}

	function start($sync=false) {
		var_dump("---------------START-----------------\n");
		Bidder_start($this->_cPtr,$sync);
	}

	function shutdown() {
		Bidder_shutdown($this->_cPtr);
	}

	function doConfig($config) {
		var_dump("---------------CONFIG-----------------\n");
		return Bidder_doConfig($this->_cPtr,$config);
	}

	function doBid($id,$bids,$meta=null,$wmc=null) {
		print_r("---------------DoBID-----------------\n");
		switch (func_num_args()) {
		case 2: Bidder_doBid($this->_cPtr,$id,$bids); break;
		case 3: Bidder_doBid($this->_cPtr,$id,$bids,$meta); break;
		default: Bidder_doBid($this->_cPtr,$id,$bids,$meta,$wmc);
		}
		return $r;
	}

	function setBidRequestCb($arg1) {
		Bidder_setBidRequestCb($this->_cPtr,$arg1);
	}

	function setDeliveryCb($arg1) {
		Bidder_setDeliveryCb($this->_cPtr,$arg1);
	}

	function setBidResultCb($arg1) {
		Bidder_setBidResultCb($this->_cPtr,$arg1);
	}

	function setErrorCb($arg1) {
		Bidder_setErrorCb($this->_cPtr,$arg1);
	}
}


?>
